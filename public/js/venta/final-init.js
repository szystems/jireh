// Script de inicializaci√≥n final mejorado
// Este script se ejecuta despu√©s de todos los otros para garantizar
// que el select de art√≠culos est√© vac√≠o y el multiselect de trabajadores oculto.
$(document).ready(function() {
    console.log("üöÄ Inicializando final-init.js - Configuraci√≥n final del formulario");

    // Ejecuci√≥n inmediata con verificaci√≥n de estado
    inicializacionFinal();

    // M√∫ltiples intentos para combatir cualquier inicializaci√≥n tard√≠a
    setTimeout(() => inicializacionFinal(), 200);
    setTimeout(() => inicializacionFinal(), 500);
    setTimeout(() => inicializacionFinal(), 1000);
    setTimeout(() => inicializacionFinal(), 2000); // √öltima verificaci√≥n    // Funci√≥n principal de inicializaci√≥n final
    function inicializacionFinal() {
        console.log("‚öôÔ∏è Aplicando configuraciones finales del formulario");

        // Referencias a elementos clave
        const $articuloSelect = $('#articulo');
        const $trabajadoresContainer = $('#trabajadores-carwash-container');
        const $stockInput = $('#stock');
        const $unidadAbreviaturaSpan = $('#unidad-abreviatura');
        const $cantidadInput = $('#cantidad-nuevo');

        // 1. Resetear y configurar correctamente el select de art√≠culos
        if ($articuloSelect.length) {
            console.log("Iniciando configuraci√≥n final del select de art√≠culos");

            // 1.1 Verificar si hay una selecci√≥n autom√°tica o de prueba
            const valorActual = $articuloSelect.val();
            // Si hay una selecci√≥n activa que no fue realizada expl√≠citamente por el usuario
            if (valorActual && !window.seleccionArticuloExplicita) {
                console.warn(`‚ö†Ô∏è Detectada selecci√≥n no expl√≠cita: ${valorActual} - Aplicando correcci√≥n`);

                // Procedimiento de correcci√≥n avanzado
                try {
                    // Eliminar atributos selected en todas las opciones
                    $articuloSelect.find('option:selected').prop('selected', false);
                    $articuloSelect.find('option[selected]').removeAttr('selected');

                    // Asegurar que la opci√≥n vac√≠a est√© seleccionada
                    const $emptyOption = $articuloSelect.find('option[value=""]');
                    if ($emptyOption.length) {
                        $emptyOption.prop('selected', true);
                    } else {
                        // Si no existe opci√≥n vac√≠a, crear una
                        $articuloSelect.prepend('<option value="" selected>Seleccione un art√≠culo</option>');
                    }

                    // Reinicializar Select2 con configuraci√≥n √≥ptima
                    if ($articuloSelect.data('select2')) {
                        $articuloSelect.select2('destroy');

                        // Inicializar con opciones que previenen selecci√≥n autom√°tica
                        $articuloSelect.select2({
                            dropdownParent: $articuloSelect.parent(),
                            placeholder: {
                                id: '',
                                text: 'Seleccione un art√≠culo'
                            },
                            allowClear: true,
                            selectOnClose: false,
                            closeOnSelect: true,
                            selectionCssClass: 'no-auto-selection'
                        });

                        // Forzar valor vac√≠o despu√©s de inicializaci√≥n
                        $articuloSelect.val(null).trigger('change');
                    }
                } catch(e) {
                    console.error("Error al corregir select2:", e);
                }
            } else {
                console.log("‚úÖ Select sin preselecci√≥n - Estado correcto");
            }
        }

        // 2. Asegurar visibilidad correcta del contenedor de trabajadores
        if ($trabajadoresContainer.length) {
            // Verificar si hay alg√∫n art√≠culo seleccionado
            const articuloSeleccionado = $articuloSelect.val();
            if (!articuloSeleccionado) {
                // Si no hay art√≠culo, ocultar contenedor
                if ($trabajadoresContainer.is(':visible')) {
                    $trabajadoresContainer.hide();
                    console.log("Ocultando contenedor de trabajadores (no hay art√≠culo seleccionado)");
                }
            } else {
                // Si hay art√≠culo, verificar su tipo
                const tipoArticulo = $articuloSelect.find('option:selected').data('tipo');
                const esServicio = (tipoArticulo === 'servicio');

                // Ajustar visibilidad seg√∫n tipo
                if (esServicio && !$trabajadoresContainer.is(':visible')) {
                    $trabajadoresContainer.show();
                    console.log("Mostrando contenedor de trabajadores para servicio");
                } else if (!esServicio && $trabajadoresContainer.is(':visible')) {
                    $trabajadoresContainer.hide();
                    console.log("Ocultando contenedor de trabajadores para producto");
                }
            }
        }

        // 3. Resetear campos adicionales si no hay art√≠culo seleccionado
        if (!$articuloSelect.val()) {
            if ($stockInput.length) $stockInput.val('');
            if ($unidadAbreviaturaSpan.length) $unidadAbreviaturaSpan.text('');
            if ($cantidadInput.length) $cantidadInput.val('1');
        }

        // 4. Configuraci√≥n global de Select2 para prevenir selecci√≥n autom√°tica
        if ($.fn.select2 && $.fn.select2.defaults) {
            try {
                // Aplicar configuraci√≥n global √≥ptima
                $.fn.select2.defaults.set('selectOnClose', false);
                $.fn.select2.defaults.set('allowClear', true);
                console.log("Configuraci√≥n global de Select2 optimizada");
            } catch (e) {
                console.error("Error al modificar configuraci√≥n global:", e);
            }
        }

        console.log("‚úÖ Inicializaci√≥n final completada");
    }

    // Monitorear cambios en el select de art√≠culos para diagn√≥stico
    $('#articulo').on('change', function() {
        const valor = $(this).val();
        const esServicio = $(this).find('option:selected').data('tipo') === 'servicio';
        console.log(`üì¢ Cambio en select de art√≠culos: ${valor || 'vac√≠o'} (${esServicio ? 'Servicio' : 'Producto'})`);
    });
});
